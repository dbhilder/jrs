/*
 * LoginPanel.java
 *
 */

package rps.client;

import javax.swing.event.ListDataListener;
import rps.common.*;
import java.awt.*;
import java.util.*;
import javax.swing.*;

/**
 *
 * @author  dhilder
 */
public class GameSetupPanel extends javax.swing.JPanel {
    
    private RPSClient rpsClient;
    private int selectedGameType;
    
    /** Creates new form LoginPanel */
    public GameSetupPanel(RPSClient rpsClient) {
        this.rpsClient = rpsClient;
        initComponents();
        teamsList.setModel(new DefaultListModel());
        errorMessageLabel.setVisible(false);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        gameTypeBG = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        titleTF = new javax.swing.JTextField();
        gatherButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        handsRB = new javax.swing.JRadioButton();
        minutesRB = new javax.swing.JRadioButton();
        pointsRB = new javax.swing.JRadioButton();
        handsTF = new javax.swing.JTextField();
        minutesTF = new javax.swing.JTextField();
        pointsTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        errorMessageLabel = new javax.swing.JLabel();
        numPlayersTF = new javax.swing.JTextField();
        teamsCB = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        teamsList = new javax.swing.JList();
        addTeamButton = new javax.swing.JButton();
        removeTeamButton = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(450, 500));
        setPreferredSize(new java.awt.Dimension(450, 500));
        jLabel1.setText("Game title:");

        jLabel2.setText("Number of players:");

        titleTF.setColumns(10);

        gatherButton.setText("Gather");
        gatherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gatherButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Palatino", 3, 36));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Rock, Paper, Scissors");

        jLabel5.setText("Game ends after:");

        gameTypeBG.add(handsRB);
        handsRB.setSelected(true);
        handsRB.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        handsRB.setMargin(new java.awt.Insets(0, 0, 0, 0));
        handsRB.setName("hands");
        handsRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handsRBActionPerformed(evt);
            }
        });
        handsRB.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                handsRBStateChanged(evt);
            }
        });

        gameTypeBG.add(minutesRB);
        minutesRB.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        minutesRB.setMargin(new java.awt.Insets(0, 0, 0, 0));
        minutesRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minutesRBActionPerformed(evt);
            }
        });
        minutesRB.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                minutesRBStateChanged(evt);
            }
        });

        gameTypeBG.add(pointsRB);
        pointsRB.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        pointsRB.setMargin(new java.awt.Insets(0, 0, 0, 0));
        pointsRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointsRBActionPerformed(evt);
            }
        });
        pointsRB.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                pointsRBStateChanged(evt);
            }
        });

        handsTF.setColumns(2);
        handsTF.setText("5");

        minutesTF.setColumns(2);
        minutesTF.setText("5");

        pointsTF.setColumns(2);
        pointsTF.setText("5");

        jLabel6.setText("hands");

        jLabel7.setText("minutes");

        jLabel8.setText("points");

        errorMessageLabel.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        errorMessageLabel.setForeground(new java.awt.Color(255, 51, 51));
        errorMessageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        errorMessageLabel.setText("error message");

        numPlayersTF.setColumns(2);

        teamsCB.setText("Teams");
        teamsCB.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        teamsCB.setMargin(new java.awt.Insets(0, 0, 0, 0));
        teamsCB.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                teamsCBStateChanged(evt);
            }
        });

        teamsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Team 1", "Team 2" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        teamsList.setEnabled(false);
        teamsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                teamsListValueChanged(evt);
            }
        });

        jScrollPane1.setViewportView(teamsList);

        addTeamButton.setText("Add");
        addTeamButton.setEnabled(false);
        addTeamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTeamButtonActionPerformed(evt);
            }
        });

        removeTeamButton.setText("Remove");
        removeTeamButton.setEnabled(false);
        removeTeamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeTeamButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(48, 48, 48)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel1)
                                    .add(jLabel2)
                                    .add(teamsCB))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 136, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(addTeamButton)
                                            .add(removeTeamButton)))
                                    .add(titleTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(numPlayersTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(20, 20, 20)
                                .add(jLabel5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                        .add(handsRB)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(handsTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jLabel6)
                                        .add(13, 13, 13))
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(pointsRB)
                                            .add(minutesRB))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                                .add(minutesTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(jLabel7))
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                                .add(pointsTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(jLabel8)))))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(errorMessageLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 428, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(131, 131, 131)
                        .add(gatherButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel3)
                .add(37, 37, 37)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(titleTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(numPlayersTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(8, 8, 8)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(teamsCB)
                            .add(addTeamButton))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(removeTeamButton))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(handsRB)
                    .add(handsTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(minutesRB)
                    .add(minutesTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(pointsRB)
                    .add(pointsTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel8))
                .add(21, 21, 21)
                .add(errorMessageLabel)
                .add(21, 21, 21)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(gatherButton)
                    .add(cancelButton))
                .add(99, 99, 99))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void teamsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_teamsListValueChanged
        removeTeamButton.setEnabled(!teamsList.isSelectionEmpty());
    }//GEN-LAST:event_teamsListValueChanged

    private void teamsCBStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_teamsCBStateChanged
        teamsList.setEnabled(teamsCB.isSelected());
        addTeamButton.setEnabled(teamsCB.isSelected());
        removeTeamButton.setEnabled(teamsCB.isSelected());
    }//GEN-LAST:event_teamsCBStateChanged

    private void removeTeamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeTeamButtonActionPerformed
        int[] selectedIndices = teamsList.getSelectedIndices();
        for (int i=0; i<selectedIndices.length; i++) {
            ((DefaultListModel)teamsList.getModel()).removeElementAt(selectedIndices[i]);
        }
    }//GEN-LAST:event_removeTeamButtonActionPerformed

    private void addTeamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTeamButtonActionPerformed
        JTextField teamNameTF = new JTextField(10);
        JComponent[] components = {new JLabel("Team name:"), teamNameTF};
        int rc = JOptionPane.showOptionDialog(
            teamsList, components, "Add Team", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, 
            null, null, null);
        if (rc == JOptionPane.OK_OPTION) {
            ((DefaultListModel)teamsList.getModel()).addElement(teamNameTF.getText());
        }
    }//GEN-LAST:event_addTeamButtonActionPerformed

    private void pointsRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointsRBActionPerformed
        selectedGameType = GameState.POINTS;
    }//GEN-LAST:event_pointsRBActionPerformed

    private void minutesRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minutesRBActionPerformed
        selectedGameType = GameState.TIMED;
    }//GEN-LAST:event_minutesRBActionPerformed

    private void handsRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handsRBActionPerformed
        selectedGameType = GameState.HANDS;
    }//GEN-LAST:event_handsRBActionPerformed

    private void pointsRBStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_pointsRBStateChanged
        pointsTF.setEnabled(pointsRB.isSelected());
    }//GEN-LAST:event_pointsRBStateChanged

    private void minutesRBStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_minutesRBStateChanged
        minutesTF.setEnabled(minutesRB.isSelected());
    }//GEN-LAST:event_minutesRBStateChanged

    private void handsRBStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_handsRBStateChanged
        handsTF.setEnabled(handsRB.isSelected());
    }//GEN-LAST:event_handsRBStateChanged

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        errorMessageLabel.setVisible(false);
        ((CardLayout)getParent().getLayout()).show(getParent(), "JoinPanel");
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void gatherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gatherButtonActionPerformed

        errorMessageLabel.setVisible(false);

        String title = titleTF.getText();
        int numPlayers = Integer.parseInt(numPlayersTF.getText());
        int numTeams = teamsList.getModel().getSize();
        
        if ((numTeams > 0) && (numPlayers % numTeams != 0)) {
            errorMessageLabel.setText("The number of teams must be an even multiple of the number of players.");
            errorMessageLabel.setVisible(true);
            return;
        }
        
        String[] teamNames = null;
        if (numTeams > 0) {
            teamNames = new String[numTeams];
            for (int i=0; i<numTeams; i++) {
                teamNames[i] = (String)teamsList.getModel().getElementAt(i);
            }
        }
        
        int endGameLimit = 0;
        switch (selectedGameType) {
            case GameState.HANDS:
                endGameLimit = Integer.parseInt(handsTF.getText());
                break;
            case GameState.TIMED:
                endGameLimit = Integer.parseInt(minutesTF.getText());
                break;
            case GameState.POINTS:
                endGameLimit = Integer.parseInt(pointsTF.getText());
                break;
        }
        
        try {
            StartGatheringRequest startGatheringRequest = 
                new StartGatheringRequest(rpsClient.getUserId(), title, numPlayers, teamNames, selectedGameType, endGameLimit);
        
            StartGatheringResponse startGatheringResponse = 
                (StartGatheringResponse)rpsClient.sendMessage(startGatheringRequest);
                
            // TO DO: Check the response for errors. If none, go to GatherPanel.
            // Response should included GameState object with this player joined.

            rpsClient.setCurrentGame(startGatheringResponse.getGameInfo());

            ((CardLayout)getParent().getLayout()).show(getParent(), "GatherPanel");
        }
        catch (Exception e) {
            // TO DO: show error in message label? Show dialog?
            e.printStackTrace();
        }
    }//GEN-LAST:event_gatherButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTeamButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel errorMessageLabel;
    private javax.swing.ButtonGroup gameTypeBG;
    private javax.swing.JButton gatherButton;
    private javax.swing.JRadioButton handsRB;
    private javax.swing.JTextField handsTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton minutesRB;
    private javax.swing.JTextField minutesTF;
    private javax.swing.JTextField numPlayersTF;
    private javax.swing.JRadioButton pointsRB;
    private javax.swing.JTextField pointsTF;
    private javax.swing.JButton removeTeamButton;
    private javax.swing.JCheckBox teamsCB;
    private javax.swing.JList teamsList;
    private javax.swing.JTextField titleTF;
    // End of variables declaration//GEN-END:variables
    
}
